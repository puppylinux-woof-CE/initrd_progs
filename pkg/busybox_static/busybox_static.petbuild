#!/bin/sh
# busybox_static

### LINKS
## http://ewontfix.com/12/
## https://github.com/kanj/elfs/issues/4
## http://wiki.musl-libc.org/wiki/Building_Busybox
## http://lists.busybox.net/pipermail/busybox/2013-July/079487.html
#   CONFIG_EXTRA_COMPAT changes several tools to use
#    the GNU regex API instead of the POSIX regex API
#    the GNU API is available with glibc and
#    uClibc but not musl. (Well, maybe not even uClibc, depending on the
#    build options; I think it has an option that omits GNU regex...)
#    - The feature the option provides is not needed for
#      conformance to POSIX but for extra GNU-version-compatible
#      functionality beyond POSIX.

if [ -z ${MWD} ] ; then
	echo "Use build.sh"
	exit 1
fi

[ -z $STATIC ] && STATIC=1

. ../../func

URL=https://busybox.net/downloads
PKG=busybox_static
SRC=busybox
VER=1.36.0
REV=1
COMP=tar.bz2
DESC="BusyBox - The Swiss Army Knife of Embedded Linux - statically built"
DEPS=
CAT=BuildingBlock

[ -z ${DOTconfig} ] && DOTconfig="DOTconfig"
[ "$CREATE_PET" ]   && DOTconfig="DOTconfig_full"


build() {
	cd ${SRC}-${VER}
	# diff -Naur busybox-1.24.2 busybox-1.24.2_patched > busybox.patch
	for p in $(ls ../patches/*.patch 2>/dev/null | sort) ; do
		patch -p1 < $p
	done
	for p in $(ls ../patches-alpine/*.patch 2>/dev/null | sort) ; do
		patch -p1 < $p
	done
	[ -f ../${DOTconfig} ] && cp -fv ../${DOTconfig} .config
	#-
	BLACKLIST=$(
		echo CONFIG_FEATURE_DEVFS '-> tells busybox to look for names like /dev/loop/0 instead of /dev/loop/0'
		echo CONFIG_DEVFSD '(obsolete)'
		echo CONFIG_FEATURE_PREFER_APPLETS
	)
	#-
	if [ "$STATIC" = "1" ] ; then
		# initrd
		ENABLE_KONFIG=$(
			echo CONFIG_STATIC
			if [ "$CREATE_PET" ] ; then
				echo CONFIG_ASH_JOB_CONTROL
			fi
		)
		DISABLE_KONFIG=$(
			echo CONFIG_FEATURE_SH_STANDALONE 'not recommended...'
			echo CONFIG_FEATURE_SH_NOFORK     'not recommended...'
			echo FEATURE_VI_REGEX_SEARCH '(needs GNU regexp extensions)'
			echo FEATURE_MOUNT_NFS       'for linux < 2.6.23 (needs rpc/rpc.h)'
			echo FEATURE_INETD_RPC       'for linux < 2.6.23 (needs rpc/rpc.h)'
			if [ "$CREATE_PET" ] ; then
				echo CONFIG_ASH_JOB_CONTROL
			fi
		)
	else # main sfs
		ENABLE_KONFIG=$(
			echo CONFIG_ASH_JOB_CONTROL
		)
		DISABLE_KONFIG=$(
			echo CONFIG_FEATURE_SH_STANDALONE 'not recommended...'
			echo CONFIG_FEATURE_SH_NOFORK     'not recommended...'
			echo CONFIG_FEATURE_PREFER_APPLETS
			echo CONFIG_STATIC
		)
	fi
	#-
	BLACKLIST="$(echo "$BLACKLIST" | sed -e 's| .*||')"
	ENABLE_KONFIG="$(echo "$ENABLE_KONFIG" | sed -e 's| .*||')"
	DISABLE_KONFIG="$(echo "$DISABLE_KONFIG" | sed -e 's| .*||')"
	#echo "BL: $BLACKLIST"
	#echo "EN: $ENABLE_KONFIG"
	#echo "DI: $DISABLE_KONFIG"
	#-
	for KONFIG in $ENABLE_KONFIG
	do
		sed -i "s|^${KONFIG}=.*|${KONFIG}=y|" .config
	done
	for KONFIG in $DISABLE_KONFIG $BLACKLIST
	do
		sed -i "s|^${KONFIG}=.*|# ${KONFIG} is not set|" .config
	done
	#-
	[ -d "$XPATH" ] && CRC="CROSS_COMPILE=${XCOMPILER}-" #XCOMPILER is set in func
	_make ${MKFLAG} ${CRC} LDFLAGS="--static" oldconfig
	_make ${MKFLAG} ${CRC} LDFLAGS="--static" install
	abort_if_file_not_found busybox
	#--
	if [ "$CREATE_PET" ] ; then
		A=$ARCH
		case $ARCH in i?86) A=x86 ;; esac
		rm -f _install/bin/sh
		find _install -type l | sed 's|_install/||' > _install/bin/busybox.lst
		find _install -type l -delete
		sync
		rm -rf _install/sbin
		rm -rf _install/usr
		sync
		PKGNAME=${SRC}-${VER}-${A}_musl_static-${REV}
		rm -rf ${PKGNAME}
		mv _install ${PKGNAME}
		dir2pet -x -s -n ${PKGNAME}
		mkdir -p ${MWD}/00_${ARCH}/
		if [ -f ${PKGNAME}.pet ] ; then
			mv -fv ${PKGNAME}.pet ${MWD}/00_${ARCH}/ || exit
		elif [ -f ${PKGNAME}.pet.tar.gz ] ; then
			mv -fv ${PKGNAME}.pet.tar.gz ${MWD}/00_${ARCH}/ || exit
		elif [ -f ${PKGNAME}.pet.tar.xz ] ; then
			mv -fv ${PKGNAME}.pet.tar.xz ${MWD}/00_${ARCH}/ || exit
		else
			echo error busybox pkg not created
			exit
		fi
		cp -v .config ../${DOTconfig}
		cd ..
		rm -rf ${SRC}-${VER}
		exit 0
	fi
	#--
	cp -v .config ../${DOTconfig}
	cd -
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}/bin
	_install ${SRC}-${VER}/busybox ./${PKG}-${VER}-${ARCH}/bin
}

package() {
	# add this recipe
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}/build
	cat ${PKG}.petbuild > ./${PKG}-${VER}-${ARCH}/build/$PKG-build-recipe
	install -m 0644 DOTconfig ./${PKG}-${VER}-${ARCH}/build
	# move, don't package
	cp -a --remove-destination ./${PKG}-${VER}-${ARCH}/* ../../00_${ARCH}
	rm -r ${SRC}-${VER}
	rm -r ${PKG}-${VER}-$ARCH
	echo "moved to initrd"
	echo "done!"
}

# main
retrieve ${SRC}-${VER}.${COMP}
[ "$DLD_ONLY" = "yes" ] && exit
extract ${SRC}-${VER}.${COMP}
build
package
